{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/why-only-unexpected-exception/","result":{"data":{"site":{"siteMetadata":{"title":"Wan.log","siteUrl":"https://wwan13.github.io","thumbnail":"/thumbnails/tech-blog-thumbnail.png"}},"markdownRemark":{"id":"be93680b-e2e8-586e-b2f8-2ce6b6d1adca","tableOfContents":"<ul>\n<li><a href=\"#%EB%AD%90%EA%B0%80-%EB%AC%B8%EC%A0%9C%EC%9D%BC%EA%B9%8C\">뭐가 문제일까?</a></li>\n<li><a href=\"#%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%B4%EA%B2%B0%ED%95%98%EC%A7%80\">어떻게 해결하지?</a></li>\n</ul>","excerpt":"레코드를 DTO…","html":"<p>레코드를 DTO로 사용하며 컴팩트 생성자를 이용해 요청 값에 대한 검증을 하려고 하였습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">record</span> <span class=\"token class-name\">LoginRequest</span><span class=\"token punctuation\">(</span>  \n\t\t<span class=\"token class-name\">String</span> email<span class=\"token punctuation\">,</span>  \n\t\t<span class=\"token class-name\">String</span> password  \n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n  \n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">LoginRequest</span> <span class=\"token punctuation\">{</span>  \n\t\t<span class=\"token function\">required</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token function\">required</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">required</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> fieldName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n\t\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RequestFieldException</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MUST_BE_REQUIRED</span><span class=\"token punctuation\">,</span> fieldName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>레코드의 컴팩트 생성자는 생성자 안에 있는 코드를 초기화 전에 호출해 줍니다. 그렇기 때문에 당연히 초기화 전에 예외가 발생하면 <code class=\"language-text\">@RestControllerAdvice</code>와 <code class=\"language-text\">@ExceptionHandler</code>에서 예외가 핸들링 되어 다음과 같은 응답이 오는 것을 예상하였습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"timeStamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-23 23:02:00\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ERROR\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"email 필드는 값이 없을 수 없습니다.\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"cause\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"RequestFieldException\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"errorCode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MUST_BE_REQUIRED\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>하지만 정작 제가 받은 응답은 아래의 응답 입니다.</p>\n<p><img src=\"https://github.com/wwan13/wwan13.github.io/assets/64270501/c657b847-4293-4528-a31d-b06b2cb14412\" alt=\"wrong response\"></p>\n<p><code class=\"language-text\">required()</code>에서 던진 <code class=\"language-text\">RequestFieldException</code>이 아닌 <code class=\"language-text\">DispatcherServlet</code>이 던지는 <code class=\"language-text\">HttpMessageNotReadableException</code> 이 응답으로 오는 것입니다.</p>\n<br>\n<h3 id=\"뭐가-문제일까\" style=\"position:relative;\">뭐가 문제일까?<a href=\"#%EB%AD%90%EA%B0%80-%EB%AC%B8%EC%A0%9C%EC%9D%BC%EA%B9%8C\" aria-label=\"뭐가 문제일까 permalink\" class=\"heading-anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>원인은 <code class=\"language-text\">Jackson</code>이 <code class=\"language-text\">Json</code>을 <code class=\"language-text\">Java</code> 문법으로 역직렬화 하는 과정에 있었습니다.</p>\n<p><img src=\"https://github.com/wwan13/wwan13.github.io/assets/64270501/04f58ade-0f65-481c-8a3a-2c30b354b079\" alt=\"jackson StdValueInstantiator\"></p>\n<p>위 코드는 <code class=\"language-text\">DispatcherServlet</code>이 <code class=\"language-text\">Json</code>을 역직렬화 할 때 사용하는 <code class=\"language-text\">Jackson</code>라이브러리의 <code class=\"language-text\">StdValueInstantiator</code>입니다.</p>\n<p>코드에서 볼 수 있듯 <code class=\"language-text\">Object</code>를 생성하는 <code class=\"language-text\">_withArgsCreator.call(args)</code>에서 발생하는 모든 예외를 잡아 예외를 던지고 있습니다. 이때 <code class=\"language-text\">DispatcherServlet</code>은 이 예외를 \u001f<code class=\"language-text\">HttpMessageNotReadableException</code>으로 던지고 있었던 것입니다. 그래서 <code class=\"language-text\">@RestControllerAdvice</code>에서도 제가 의도한<code class=\"language-text\">RequestFieldException</code>가 아닌 <code class=\"language-text\">HttpMessageNotReadableException</code>를 잡아 클라이언트로 응답을 해 줬던 것이죠.</p>\n<br>\n<p>더 정확한 확인을 위해 생성자에 브레이크 포인트를 걸어 디버깅을 해보면</p>\n<p><img src=\"https://github.com/wwan13/wwan13.github.io/assets/64270501/4392262a-ec57-4d2d-afa8-4c6559c4a849\" alt=\"debug break point\"></p>\n<p><img src=\"https://github.com/wwan13/wwan13.github.io/assets/64270501/0c3907af-945b-4fa2-822f-6a08e7af7e88\" alt=\"debugging result\"></p>\n<p><code class=\"language-text\">_withArgsCreator.call(args)</code> 에서 예외가 발생해 catch 문으로 넘어가는 것을 볼 수 있었습니다.</p>\n<br>\n<h3 id=\"어떻게-해결하지\" style=\"position:relative;\">어떻게 해결하지?<a href=\"#%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%B4%EA%B2%B0%ED%95%98%EC%A7%80\" aria-label=\"어떻게 해결하지 permalink\" class=\"heading-anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>원래 <code class=\"language-text\">HttpMessageNotReadableException</code>를 처리하던 <code class=\"language-text\">exceptionHandler</code>입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpMessageNotReadableException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>  \n<span class=\"token keyword\">private</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleHttpMessageNotReadableException</span><span class=\"token punctuation\">(</span>  \n<span class=\"token class-name\">HttpMessageNotReadableException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n\t<span class=\"token class-name\">ErrorCode</span> errorCode <span class=\"token operator\">=</span> <span class=\"token constant\">INVALID_HTTP_REQUEST</span><span class=\"token punctuation\">;</span>  \n  \n\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>errorCode<span class=\"token punctuation\">.</span><span class=\"token function\">getHttpStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  \n\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCause</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> errorCode<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> errorCode<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>예외를 감지하면 그에 대응하는 적절한 응답을 주는 단순한 방법 이였습니다.</p>\n<br>\n<p>그리고 제가 이 문제를 해결한 코드입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpMessageNotReadableException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>  \n<span class=\"token keyword\">private</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleHttpMessageNotReadableException</span><span class=\"token punctuation\">(</span>  \n<span class=\"token class-name\">HttpMessageNotReadableException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n  \n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getRootCause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">RequestFieldException</span> requestFieldException<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n\t\t<span class=\"token class-name\">ErrorCode</span> requestFieltErrorCode <span class=\"token operator\">=</span> requestFieldException<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>requestFieltErrorCode<span class=\"token punctuation\">.</span><span class=\"token function\">getHttpStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  \n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>  \n\t\t\t\t<span class=\"token function\">getCause</span><span class=\"token punctuation\">(</span>requestFieldException<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  \n\t\t\t\trequestFieltErrorCode<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  \n\t\t\t\trequestFieldException<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token punctuation\">}</span>  \n  \n\t<span class=\"token class-name\">ErrorCode</span> errorCode <span class=\"token operator\">=</span> <span class=\"token constant\">INVALID_HTTP_REQUEST</span><span class=\"token punctuation\">;</span>  \n  \n\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>errorCode<span class=\"token punctuation\">.</span><span class=\"token function\">getHttpStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  \n\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCause</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> errorCode<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> errorCode<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">e.getRootCause()</code>를 이용해 예외가 발생한 원인을 불러왔습니다.<br>\n<code class=\"language-text\">HttpMessageNotReadableException</code>은 이 경우를 제외하고도 자주 발생할 수 있는 예외이기 때문에 <code class=\"language-text\">rootCause</code>가 <code class=\"language-text\">RequestFieldException</code>인 경우에 한해서만 별도의 응답을 제공하도록 하였습니다.</p>\n<p>그 결과 이제 제가 예상하던 응답을 확인할 수 있게 되었습니다!!</p>\n<p><img src=\"https://github.com/wwan13/wwan13.github.io/assets/64270501/7af3a1d3-db81-4392-8ef5-f6bf297cb6d2\" alt=\"final response\"></p>\n<br>\n<p>한 가지 아쉬운 점은</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">LoginRequest</span> <span class=\"token punctuation\">{</span>  \n\t<span class=\"token function\">required</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token function\">required</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span>  </code></pre></div>\n<p><code class=\"language-text\">{필드명} 필드는 값이 없을 수 없습니다</code> 와 같은 응답을 전달하기 위해 위 코드 처럼 필드 명을 함께 전달해야 해서 약간은 불편한 느낌이 없지 않아 있어 이 부분을 더 ‘깔꼼!’하게 해결할 수 있도록 해보겠습니다.</p>","fields":{"slug":"/why-only-unexpected-exception/"},"frontmatter":{"title":"내가 원하는 예외가 아닌 HttpMessageNotReadableException만잡는다구요?","date":"2024-02-12","description":"요청시 들어오는 dto의 생성자에서 던지는 커스텀 예외를 잡지 못하는 이유를 알아보자.","tags":["Tech"],"thumbnail":null}},"previous":{"fields":{"slug":"/without-spring-security/"},"frontmatter":{"title":"Spring Security 없이 JWT 인증/인가 구현 해보기"}},"next":null},"pageContext":{"id":"be93680b-e2e8-586e-b2f8-2ce6b6d1adca","previousPostId":"4d89736e-6e9e-53a6-8939-d21b655b1ee5","nextPostId":null}},"staticQueryHashes":["2260143708","2538111481","658623446","984448874"]}